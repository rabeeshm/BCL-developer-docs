<!DOCTYPE html>
<html lang="en">

<head>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no, width=device-width" />
    <!-- change title to match the h1 heading -->
    <title>Brightcove Player Sample: Age Gate</title>
    <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/foundation/5.5.3/css/foundation.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/foundation/5.5.3/css/normalize.css" />
    <script src="//use.edgefonts.net/source-code-pro.js"></script>
    <link rel="stylesheet" href="/en/styles/template/css/bcls-doc.css">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.3.0/styles/atelier-forest.light.min.css">


    <script>
        (function(i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function() {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date();
            a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-2728311-29', 'auto');
        ga('send', 'pageview');

    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/5.5.3/js/vendor/modernizr.js"></script>

</head>

<body>
    <!-- header navbar -->
    <div id="navWrapper" class="fixed"></div>
    <!-- breadcrumbs -->
    <nav id="breadCrumbWrapper" class="breadcrumbs show-for-medium-up"></nav>
    <!-- search -->
    <div id="searchModal" class="reveal-modal" data-reveal></div>
    <!-- content -->
    <div class="row">
        <div class="sidebar large-2 columns show-for-large-up">
            <div id="sidenav" class="side-nav"></div>
        </div>
        <div id="main" class="large-10 small-12 columns">
            <article class="bcls-article">
                <header class="bcls-header" id="bcls_header">
                    <h1>Brightcove Player Sample: Age Gate</h1>
                    <p>This topic shows you how to use a Brightcove player with a simple age gate overlay. The user must certify their age by clicking on the overlay text before the video will play.</p>
                    <div class="bcls-aside bcls-aside--information">
                        <h4>Plugins used</h4>
                        <p>This example uses open source video.js plugins:</p>
                        <ul>
                            <li><a href="https://github.com/brightcove/videojs-overlay">videojs-overlay</a> : For details, refer to the <a href="../../brightcove-player/guides/overlay-plugin.html">Display Overlay Plugin</a> document.</li>
                        </ul>
                    </div>
                </header>

                <section id="Development_sequence" class="bcls-section">
                    <h2 class="bcls-expander-head">Development sequence</h2>
                    <div class="bcls-expander-content" style="height:0;visibility:hidden;display:none;">
                        <p>Here is the recommended development sequence:</p>
                        <ol>
                            <li>Use the embed_in_page player implementation to test the functionality of your player, plugin and CSS (if CSS is needed)</li>
                            <li>Put the plugin's JavaScript and CSS into separate files for local testing</li>
                            <li>Deploy the plugin code and CSS to your server once you have worked out any errors</li>
                            <li>Use <span class="video-cloud-only">Video Cloud</span><span class="perform-only">Perform</span> Studio to add the plugin and CSS to your player</li>
                            <li>Replace the embed_in_page player implementation if you determine that the iframe implementation is a better fit (detailed in next section)</li>
                        </ol>
                        <p>For details about these steps, review the <a href="../../brightcove-player/guides/plugin-dev-quick-start.html">Quick Start to Plugin Development</a> guide.</p>
                        <h3>iframe or embed_in_page</h3>
                        <p>When developing enhancements for the Brightcove player you will need to decide if the code is a best fit for the iframe or embed_in_page implementation. The best practice recommendation is to build a plugin for use with an iframe implementation.
                            The advantages of using the iframe player are:</p>
                        <ul>
                            <li>No collisions with existing JavaScript and/or CSS</li>
                            <li>Automatically responsive</li>
                            <li>The iframe eases use in social media apps (or whenever the video will need to "travel" into other apps)</li>
                        </ul>
                        <p>Although integrating the embed_in_page player can be more complex, there are times when you will plan your code around that implementation. To generalize, this approach is best when the containing page needs to communicate to the player.
                            Specifically, here are some examples:</p>
                        <ul>
                            <li>Code in the containing page needs to listen for and act on player events</li>
                            <li>The player uses styles from the containing page</li>
                            <li>The iframe will cause app logic to fail, like a redirect from the containing page</li>
                        </ul>
                        <p>Even if your final implementation does not use the iframe code, you can still use the embed_in_page code with a plugin for your JavaScript and a separate file for your CSS. This encapsulates your logic so that you can easily use it
                            in multiple players.</p>
                    </div>
                    <!-- id="expanderContent" -->
                </section>

                <section id="Select_implementation" class="bcls-section">
                    <h2>Select implementation</h2>
                    <p>In this example, you will test with the embed_in_page code and then move the styles and scripts into separate files to test locally. Then, you will use the Embed API to append the age gate styles, script and plugin to a child player based
                        on the properties of the parent. With this player, you can run this example as an iframe implementation.</p>
                </section>

                <section id="API_resources_used" class="bcls-section">
                    <h2>API resources used</h2>
                    <p>The following sections detail resources used from various APIs.</p>
                    <h3>Brightcove player API methods</h3>
                    <ul>
                        <li><code>removeClass()</code></li>
                        <li><code>play()</code></li>
                    </ul>
                    <h3>Brightcove player API events</h3>
                    <ul>
                        <li><code>loadedmetadata</code></li>
                    </ul>
                </section>

                <section id="The_player" class="bcls-section">
                    <h2>The player</h2>
                    <p>This example displays an overlay and hides the player controls and play button. When the user confirms their age by clicking on the overlay text, the controls are displayed and the video plays. Test the functionality by <strong>clicking on the text</strong>.</p>

                    <video id="video_1" style="width: 640px; height: 360px;" data-video-id="4172255216001" data-account="1752604059001" data-player="NkBaWlzKl" data-embed="default" class="video-js" controls=""></video>
                    <script src="//players.brightcove.net/1752604059001/NkBaWlzKl_default/index.min.js"></script>

                </section>
                <!-- id="player" -->

                <section id="How_it_works" class="bcls-section">
                    <h2>How it works</h2>
                    <p>The following sections explain the player, JavaScript and CSS code used in the example.</p>
                    <h3>Create the player</h3>
                    <p>To create a player and assign a video to it, follow these steps:</p>
                    <ol>
                        <li>In the <strong>Players</strong> module, create a new player or use an existing one.</li>
                        <li>
                            <p>For this example, you will need to add the Overlay plugin to the player:</p>
                            <p class="bcls-aside bcls-aside--information">For more information about the Overlay plugin, see the <a href="../../brightcove-player/guides/overlay-plugin.html">Display Overlay Plugin</a> document. To review the plugin versions, see the <a href="../../brightcove-player/reference/plugin-version-reference.html">Plugin Version Reference</a> document.</p>
                            <ol type="a">
                                <li>Locate the <strong>Plugins</strong> section and click <strong>Edit</strong>.</li>
                                <li>The JavaScript for the plugin is provided and will not change for different plugin implementations. For the <strong>JavaScript URL</strong>, enter:
                                    <pre> //players.brightcove.net/videojs-overlay/1/videojs-overlay.min.js</pre></li>
                                <li>The CSS for the plugin is provided and will not change for different plugin implementations. For the <strong>CSS URL</strong>, enter:
                                    <br/>
                                    <pre> //players.brightcove.net/videojs-overlay/1/videojs-overlay.css</pre></li>
                                <li>For the <strong>Name</strong>, enter <strong>overlay</strong>.</li>
                                <li>
                                    <p>Enter the plugin options. The example below displays clickable text when the video data is loaded, and hides the overlay once the video starts playing.</p>
                                    <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="252-259"></code></p>
                                    <div><img src="../../brightcove-player/samples/assets/age-gate-overlay.png" alt="age gate overlay plugin"></div>
                            </ol>
                            </li>
                            <li>Click <strong>Save</strong> and then <strong>Publish</strong> the player.</li>
                            <li><span class="video-cloud-only">In the <strong>Media</strong> module, select a video and publish it with this player.</span><span class="perform-only">Assign video content to the player and publish it.</span></li>
                            <li>Copy the In-Page embed code and paste it into a new HTML file.</li>
                    </ol>
                    <p class="bcls-aside bcls-aside--information">For details on how to get this embed code, see the <a href="../../brightcove-player/getting-started/quick-start-bc-player.html">Quick Start to Brightcove Player</a> document.</p>

                    <p>The embed code should look like this:</p>
                    <p class="video-cloud-only"><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="84-91"></code></p>
                    <p class="perform-only"><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="84,86-91"></code></p>

                    <h3>The HTML code</h3>
                    <p>No extra HTML code is needed for this example, until you get to the iframe implementation.</p>

                    <h3>The JavaScript code</h3>
                    <p>Add the following JavaScript to your page code.</p>
                    <p>Here you will use the player's <code>addClass()</code> and <code>removeClass()</code> methods to hide and then show the player controls. We'll look at the details of the <code>video-agelist</code> class in the next section.</p>
                    <ul>
                        <li>Line 99: Gets a reference to the player when it is ready.</li>
                        <li>Line 100: Adds the class which hides the player controls and the big play button.</li>
                        <li>Line 102: Listens for when the player has initial duration and dimension information.</li>
                        <li>Line 103: Gets a reference to the age verification text in the overlay.</li>
                        <li>Line 104: Listens for when the user clicks the age verification text.</li>
                        <li>Line 105: Removes the class which hides the player controls and the big play button.</li>
                        <li>Line 106: Starts video playback.</li>
                    </ul>
                    <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="94-110"></code></p>

                    <h3>The stylesheet</h3>
                    <p>This example uses CSS styles for the Brightcove player and the Overlay plugin.</p>
                    <ul>
                        <li>Lines 53-65: Override the default styles for the Overlay plugin.</li>
                        <li>Lines 67-70: Hide the player controls and the big play button.</li>
                        <li>Lines 72-74: Set the cursor for the age verification text in the overlay.</li>
                        <li>Lines 76-79: Set the dimensions of the player.</li>
                    </ul>
                    <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="51-80"></code></p>
                    <h4>Hiding player controls</h4>
                    <p>Let's take a closer look at how we used CSS to hide the big play button and the control bar. For an introduction about changing the appearance of the Brightcove player, see the <a href="../../brightcove-player/guides/customize-appearance.html">Customize Player Appearance</a>                    guide.</p>
                    <p>First, let's change the style to hide the player's big play button.</p>
                    <ol>
                        <li>In the Chrome browser, open the <strong>Developer Tools</strong>.</li>
                        <li>Right click on the player and select <strong>Inspect Element</strong>.</li>
                        <li>In the <strong>Elements</strong> section of the <strong>Developer Tools</strong>, select the HTML associated with the big play button.</li>
                        <li>In the <strong>Styles</strong> section, you can see that the original <code>display</code> property with a value of <code>block</code> is set on the <code>div</code> element.
                            <div><img src="../../brightcove-player/samples/assets/age-gate-hide-button.png" alt="hide big play button" title="hide big play button"></div>
                        </li>
                        <li>When overriding CSS values, more specific styles win over less specific ones. Since elements have the lowest specificity value, we can override the display property by simply specifying the <code>vjs-big-play-button</code> class.</li>
                        <li>Look at our CSS for the big play button below. In this example, we are saying select all elements with a class name of <code>vjs-big-play-button</code> which are decendents of the element with class name of <code>video-agelist</code>.
                            Remember that in the JavaScript code, we added the <code>video-agelist</code> class to the player.
                            <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="67-70" data-gist-highlight-line="68,69"></code></p>
                        </li>
                    </ol>

                    <p>Next, let's change the style to hide the player's control bar.</p>
                    <ol>
                        <li>In the <strong>Elements</strong> section of the <strong>Developer Tools</strong>, select the HTML associated with the player control bar.</li>
                        <li>In the <strong>Styles</strong> section, you can see that the original <code>display</code> property with a value of <code>flex</code> is set with three class attributes in the selector.
                            <div><img src="../../brightcove-player/samples/assets/age-gate-hide-controls.png" alt="hide control bar" title="hide control bar"></div>
                        </li>
                        <li>To override the style for the control bar, we need at least three class attributes in our selector, including the <code>vjs-control-bar</code> class.</li>
                        <li>Look at our CSS for the control bar below. In this example, we are saying select all elements with a class name of <code>vjs-control-bar</code> which are decendents of the element with both a class name of <code>video-agelist</code>                        and a class name of <code>video-js</code>.
                            <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="67-70" data-gist-highlight-line="67,69"></code></p>
                            <p>For more information about calculating specificity value, see the <a href="//css-tricks.com/specifics-on-css-specificity/">Specifics on CSS Specificity</a> page.</p>
                        </li>

                    </ol>

                </section>

                <section id="Use_a_plugin" class="bcls-section">
                    <h2>Use a plugin</h2>
                    <p>It is a best practice to use a plugin so that you can easily add this functionality to multiple players. </p>

                    <h3>Create the JavaScript file</h3>
                    <p>Move the plugin's JavaScript code to a file located on your machine for easy testing.</p>
                    <ul>
                        <li>Create a new file for your plugin JavaScript code. In this case, name it <code>age-gate.js</code>.</li>
                        <li>Cut and paste the JavaScript code from your main HTML file into this new file.</li>
                        <li>Lines 122,135: Wrap your JavaScript code using the <code>videojs.plugin()</code> function. The first argument, <code>ageGate</code>, is the plugin name.</li>
                        <li>Line 123: Gets a reference to your player.</li>
                        <li>The rest is your JavaScript code which was reviewed in a previous section.</li>
                    </ul>
                    <p class="bcls-aside bcls-aside--warning">Line 135: Has a trailing semicolon at the end of the plugin's JavaScript code which is required.</p>
                    <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="119-135"></code></p>
                    <ol start="6">
                        <li>In the HTML file, add the following code just below the existing <code>&lt;script&gt;</code> tags. This code includes the JavaScript file and then calls the method defined in that JavaScript.</li>
                    </ol>
                    <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="160-161"></code></p>
                    <ol start="7">
                        <li>Browse the HTML page. You should see that the age gate overlay still works, except now your JavaScript code has been removed from the HTML page.</li>
                    </ol>

                    <h3>Create the CSS file</h3>
                    <p>If you are using CSS, move styles to a file located on your machine for easy testing.</p>
                    <ol>
                        <li>Create a new file for your CSS styles. In this case, name it <code>age-gate.css</code>.</li>
                        <li>In the <code>&lt;head&gt;</code> section of your HTML file, add the following link to include your newly created CSS file.</li>
                    </ol>
                    <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="146"></code></p>
                    <ol start="3">
                        <li>Browse the HTML page. You should see that the navigate on end link still works, except now your styles have been removed from the HTML page.</li>
                    </ol>
                    <p>When you have finished testing the functionality of your plugin code, you are ready to implement the plugin in the player as described in the next step.</p>

                    <h3>Implement using Players module</h3>
                    <p>To implement your plugin using the Players module, follow these steps:</p>
                    <ol>
                        <li>Copy the plugin's JavaScript file and place it in an Internet accessible URL.</li>
                        <li>Copy the styles file and place it in an Internet accessible URL.</li>
                        <li>Open the <strong>Players</strong> module and locate the player.</li>
                        <li>Click the link for the player to open the player properties.</li>
                        <li>Locate the <strong>Plugins</strong> section and click <strong>Edit</strong>.</li>
                        <li>For the <strong>JavaScript URL</strong>, enter the URL for the file you created in step 1.</li>
                        <li>For the <strong>CSS URL</strong>, enter the URL for the file you created in step 2.</li>
                        <li>For the <strong>Name</strong>, enter your plugin name. In this example, we are using <strong>ageGate</strong>.
                            <div><img src="../../brightcove-player/samples/assets/age-gate-plugin.png" alt="age gate plugin"></div>
                        </li>
                        <li>Click <strong>Save</strong> and then <strong>Publish</strong> the player.</li>
                        <li class="video-cloud-only">In the <strong>Media</strong> module, select a video and publish it with this player.</li>
                        <li>Copy the In-Page embed code and paste it into a new HTML file. Your page should look similar to this:</li>
                    </ol>

                    <p class="video-cloud-only"><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="198-217"></code></p>
                    <p class="perform-only"><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="198-207,209-217"></code></p>
                    <p>Browse the HTML page and you should see the player with the custom age gate overlay functioning correctly.</p>
                </section>

                <section id="Use_iframe" class="bcls-section">
                    <h2>Use iframe</h2>
                    <p>It is a best practice to use the iframe player implementation. If it is possible for this example, replace the embed_in_page implementation with the iframe implementation.</p>
                    <p>Here is the complete code:</p>
                    <p class="BCL-aside">Note: Here we added a <code>div</code> container around the <code>iframe</code> element to make it easier to reference the player code.</p>
                    <p><code data-gist-id="b897156dc01d948ad295" data-gist-hide-footer="true" data-gist-line="224-239"></code></p>
                    <p>Browse the HTML page and you should see the player with the plugin functioning correctly.</p>

                </section>

                <section class="bcls-section" id="Related_topics">
                    <h2>Related Topics</h2>
                    <ul>
                        <li><a href="../../player-management/guides/player-configuration.html">Player Configuration Guide</a></li>
                        <li><a href="../../brightcove-player/guides/plugin-guide.html">Plugin Guide</a></li>
                    </ul>
                </section>
            </article>
        </div>
    </div>
    <!-- bcl scripts -->
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/gist-embed/2.4/gist-embed.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.6/fastclick.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/5.5.3/js/foundation.min.js"></script>

    <script src="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.3.0/highlight.min.js"></script>
    <script src="/en/scripts/docs-nav-data.min.js"></script>
    <script src="/en/scripts/bcls-doc-site-v2.js"></script>
    <script src="/en/scripts/expander-v2.js"></script>
    <script>
        $(document).foundation();

    </script>
    <!-- CSAT form -->
    <section class="bcls-section bcls-section--csat">
        <iframe id="CSAT" src="
            http://survey.clicktools.com/app/survey/go.jsp?iv=3poon3e7e9spn&q1=articleURL" style="margin-left:25%; padding-bottom:20px;width:550px;height:475px;border:none"></iframe>
    </section>
    <!-- CSAT script -->
    <script>
        var cSat = document.getElementById('CSAT'),
            cSatSrc = cSat.getAttribute('src'),
            pageurl = window.location.href;
        cSat.setAttribute('src', cSatSrc.replace('articleURL', pageurl));
    </script>
    <!-- doc footer -->
    <footer class="bcls-footer"><a id="feedbackMail" href="mailto:docs@brightcove.com">Questions or comments?</a></footer>
    <!-- footer script -->
    <script>
        var feedbackMail = document.getElementById("feedbackMail");
        feedbackMail.setAttribute("href", "mailto:docs@brightcove.com?subject=question regarding " + encodeURI(document.location.href));
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.3.0/highlight.min.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
</body>

</html>
