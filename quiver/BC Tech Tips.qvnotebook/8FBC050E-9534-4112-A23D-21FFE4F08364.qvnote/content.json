{
  "title": "WCAGS requirements",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; white-space: normal;\">\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\"><b>Player requirements:</b></div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\">#1 Must be able to navigate with keyboard </div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\">#2 No keyboard trap (must be able to tab out of the player)</div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\"><br/></div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\">The Smart Player can sort of pass #1 but its tricky and doesn't work across all browsers (see <a href=\"https://jira.brightcove.com/browse/BC-34082\" style=\"color: rgb(0, 128, 255);\">https://jira.brightcove.com/browse/BC-34082</a>). The Smart Player always fails #2 and this is the main reason we can't claim it is WCAG accessible.</div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\"><br/></div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\">The NG Player (or at least Video.js) passes #1 and #2 with flying colours and actually goes way beyond what is required in WCAG and implements additional accessibility features like ARIA roles. This represents best practice and will make it not just the fastest player out there, but the most accessible [citation needed]. </div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\"><br/></div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\"><b>Content requirements:</b></div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\">#3 Must provide captions/transcript</div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\">#4 Must provide Audio Descriptions (for AA)</div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\"><br/></div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\">Our player and technologies like 3Play give customers the ability to use captions and transcripts, but the customer has to supply the content (captions/transcripts) themselves. Audio Descriptions are trickier - this means you have to provide an additional audio track that describes the what is shown on screen (e.g. &quot;Mark types on his keyboard&quot;). These are painful and expensive to generate and most people don't do it. There are also technical limits in our transcode process and player - we don't support multiple audio track or the ability to turn them on and off. Customers can work around this by providing two copies of each video - one with an audio description and one without.</div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\"><br/></div>\n<div style=\"color: rgb(54, 61, 76); font-family: Helvetica; font-size: 13px; line-height: 19.5px;\">The last thing is that the whole page needs to be accessible - everything passes or fails together - so there is no point in having an accessible player embedded into a page that has an accessibility problem. </div>\n</div>"
    }
  ]
}