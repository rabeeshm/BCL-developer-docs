{
  "title": "Research: Git Rebase and Merge",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; white-space: normal;\">\n<div>\n<div><b>More research - fast forward?</b> <a href=\"http://ariya.ofilabs.com/2013/09/fast-forward-git-merge.html\">http://ariya.ofilabs.com/2013/09/fast-forward-git-merge.html</a></div>\n<div><br/></div>\n<div>Git Rebase line commands: <a href=\"https://help.github.com/articles/using-git-rebase/\">https://help.github.com/articles/using-git-rebase/</a></div>\n<div><br/></div>\n<div>Overview: <a href=\"http://www.git-scm.com/book/en/v2/Git-Branching-Rebasing\">http://www.git-scm.com/book/en/v2/Git-Branching-Rebasing</a></div>\n<div><br/></div>\n<div>There are 2 ways to integrate changes from 1 branch to another - merge or rebase.</div>\n<div>A merge creates a 3-way merge between the two latest branch snapshots, master (C3) and branch (C4), with the most recent common</div>\n<div>ancestor of the two (C2). This creates a new master (C5).</div>\n<div><br/></div>\n<div><img src='quiver-image-url/git-merge.png' style='height: auto;'></div>\n<div><br/></div>\n<div>Rebasing, means you take the changes in your branch (C4) and reapply them on top of the master (C3). ie, you take all the changes committed</div>\n<div>in branch and replay them on master.</div>\n<div><br/></div>\n<div>There is no difference in the end-product for merge or rebase, but rebasing gives you a cleaner history. In the log of a rebased</div>\n<div>branch, you will see a linear history. It looks like all work was done in series, when in fact some was in parallel.</div>\n<div><br/></div>\n<div><img src='quiver-image-url/git-rebase.png' style='height: auto;'></div>\n<div><br/></div>\n<div>Rebase steps:</div>\n<div>\n<pre style=\"padding: 10px; border: 1px solid rgb(239, 238, 230); font-family: monospace; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: inherit; font-size: 0.9em; vertical-align: baseline; border-radius: 3px; color: rgb(51, 51, 51); overflow: auto; box-sizing: border-box; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background: rgb(238, 238, 238);\">\n<code style=\"padding: 3px; border: 0px; font-family: monospace; font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; font-size: 12.6000003814697px; vertical-align: baseline; border-radius: 3px; color: rgb(0, 153, 0); overflow: auto; box-sizing: border-box; background: rgb(238, 238, 238);\">$</code> git checkout experiment\n<code style=\"padding: 3px; border: 0px; font-family: monospace; font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; font-size: 12.6000003814697px; vertical-align: baseline; border-radius: 3px; color: rgb(0, 153, 0); overflow: auto; box-sizing: border-box; background: rgb(238, 238, 238);\">$</code> git rebase master\n<code style=\"padding: 3px; border: 0px; font-family: monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: 1em; vertical-align: baseline; border-radius: 3px; color: rgb(85, 85, 85); overflow: auto; box-sizing: border-box; background: rgb(238, 238, 238);\">First, rewinding head to replay your work on top of it...</code>\n<code style=\"padding: 3px; border: 0px; font-family: monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: 1em; vertical-align: baseline; border-radius: 3px; color: rgb(85, 85, 85); overflow: auto; box-sizing: border-box; background: rgb(238, 238, 238);\">Applying: added staged command</code>\n</pre></div>\n<div>At this point, you can go back to master branch </div>\n<div>and doing a fast-forward merge:</div>\n<div><br/></div>\n<div>\n<pre style=\"padding: 10px; border: 1px solid rgb(239, 238, 230); font-family: monospace; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: inherit; font-size: 0.9em; vertical-align: baseline; border-radius: 3px; color: rgb(51, 51, 51); overflow: auto; box-sizing: border-box; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background: rgb(238, 238, 238);\">\n<code style=\"padding: 3px; border: 0px; font-family: monospace; font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; font-size: 12.6000003814697px; vertical-align: baseline; border-radius: 3px; color: rgb(0, 153, 0); overflow: auto; box-sizing: border-box; background: rgb(238, 238, 238);\">$</code> git checkout master\n<code style=\"padding: 3px; border: 0px; font-family: monospace; font-style: inherit; font-variant: inherit; font-weight: bold; font-stretch: inherit; font-size: 12.6000003814697px; vertical-align: baseline; border-radius: 3px; color: rgb(0, 153, 0); overflow: auto; box-sizing: border-box; background: rgb(238, 238, 238);\">$</code> git merge experiment\n</pre></div>\n<div><br/></div>\n<div>Often, you would use a rebase to make sure your commits apply cleanly to the master.</div>\n<div>The snapshot you end up with is the same, whether you merge or rebase, it is only the history that is different.</div>\n<div><br/></div>\n<div>Rebase Examples:</div>\n<div>If a team member pushes changes that overwrite a file you are working on, the challenge is to figure out what has changed.</div>\n<div>If you pull down work that was rewritten and rebase it on top of new commits from your teammate,</div>\n<div>Git can often figure out what is uniquely yours and apply them back on top of new branch.</div>\n<div><br/></div>\n<div><span style=\"color: rgb(78, 68, 60); font-family: sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; background-color: rgb(252, 252, 250);\">You can also simplify this by running a </span><code style=\"padding: 3px; border: 1px solid rgb(245, 245, 245); font-family: monospace; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: inherit; font-size: 14px; vertical-align: baseline; border-radius: 3px; color: rgb(51, 51, 51); overflow: auto; box-sizing: border-box; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background: rgb(238, 238, 238);\">git pull --rebase</code><span style=\"color: rgb(78, 68, 60); font-family: sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; background-color: rgb(252, 252, 250);\"> instead of a normal </span><code style=\"padding: 3px; border: 1px solid rgb(245, 245, 245); font-family: monospace; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: inherit; font-size: 14px; vertical-align: baseline; border-radius: 3px; color: rgb(51, 51, 51); overflow: auto; box-sizing: border-box; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background: rgb(238, 238, 238);\">git pull</code><span style=\"color: rgb(78, 68, 60); font-family: sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; background-color: rgb(252, 252, 250);\">. Or you could do it manually with a </span><code style=\"padding: 3px; border: 1px solid rgb(245, 245, 245); font-family: monospace; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: inherit; font-size: 14px; vertical-align: baseline; border-radius: 3px; color: rgb(51, 51, 51); overflow: auto; box-sizing: border-box; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background: rgb(238, 238, 238);\">git fetch</code><span style=\"color: rgb(78, 68, 60); font-family: sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; background-color: rgb(252, 252, 250);\"> followed by a </span><code style=\"padding: 3px; border: 1px solid rgb(245, 245, 245); font-family: monospace; font-style: normal; font-variant: normal; font-weight: normal; font-stretch: inherit; font-size: 14px; vertical-align: baseline; border-radius: 3px; color: rgb(51, 51, 51); overflow: auto; box-sizing: border-box; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background: rgb(238, 238, 238);\">git rebase teamone/master</code><span style=\"color: rgb(78, 68, 60); font-family: sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; background-color: rgb(252, 252, 250);\"> in this case.</span><br/></div>\n<div><br/></div>\n<div>DO NOT REBASE COMMITS THAT EXIST OUTSIDE YOUR REPOSITORY!</div>\n<div><br/></div>\n<div>If you treat rebasing as a way to clean up and work with commits before you push them (before publishing commits),</div>\n<div>then you will be fine.</div>\n<div>If you rebase commits that have been pushed publicly, and others have work based on those commits, </div>\n<div>then you may run into trouble.</div>\n<div><br/></div>\n<div>Discussion on whether you should be rebasing or not:</div>\n<div><a href=\"http://stackoverflow.com/questions/2472254/when-should-i-use-git-pull-rebase\">http://stackoverflow.com/questions/2472254/when-should-i-use-git-pull-rebase</a><br/></div>\n<div><br/></div>\n</div>\n<div><br/></div>\n</div>"
    }
  ]
}